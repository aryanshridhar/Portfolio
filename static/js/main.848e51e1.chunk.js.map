{"version":3,"sources":["components/Sidebar.tsx","static/personal-image.png","components/ImageContainer.tsx","components/AboutSection.tsx","reportWebVitals.ts","index.tsx"],"names":["Sidebar","className","href","this","props","links","gmailLink","size","icon","faGoogle","githubLink","faGithub","linkedinLink","faLinkedin","stackOverFlowLink","faStackOverflow","twitterLink","faTwitter","React","Component","ImageContainer","renderImage","src","avatar","AboutSection","resumeLink","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","hrefLinks","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSA0CeA,E,4JAvBX,WACI,OACI,sBAAKC,UAAU,UAAf,UACI,mBAAGC,KAAMC,KAAKC,MAAMC,MAAMC,UAA1B,SACI,cAAC,IAAD,CAAiBC,KAAM,KAAMC,KAAMC,QAEvC,mBAAGP,KAAMC,KAAKC,MAAMC,MAAMK,WAA1B,SACI,cAAC,IAAD,CAAiBH,KAAM,KAAMC,KAAMG,QAEvC,mBAAGT,KAAMC,KAAKC,MAAMC,MAAMO,aAA1B,SACI,cAAC,IAAD,CAAiBL,KAAM,KAAMC,KAAMK,QAEvC,mBAAGX,KAAMC,KAAKC,MAAMC,MAAMS,kBAA1B,SACI,cAAC,IAAD,CAAiBP,KAAM,KAAMC,KAAMO,QAEvC,mBAAGb,KAAMC,KAAKC,MAAMC,MAAMW,YAA1B,SACI,cAAC,IAAD,CAAiBT,KAAM,KAAMC,KAAMS,e,GAjBjCC,IAAMC,WClBb,MAA0B,2CCuB1BC,G,kNAjBXC,YAAc,WACV,OACI,wBAAQpB,UAAU,SAAlB,SACI,qBAAKA,UAAU,SAASqB,IAAKC,O,4CAKzC,WACI,OACI,8BACI,8BAAMpB,KAAKkB,sB,GAZEH,IAAMC,YCyBpBK,G,kKArBX,WACI,OACI,qBAAKvB,UAAU,mBAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,oBAAGA,UAAU,YAAb,kZAKsB,mBAAGC,KAAK,8BAAR,sBALtB,mCAMc,mBAAGA,KAAK,qCAAR,sBANd,4CAQI,uBACA,uBATJ,UASiB,mBAAGA,KAAMC,KAAKC,MAAMqB,WAApB,kBATjB,mC,GALOP,IAAMC,YCMlBO,G,MAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCSdQ,EAAmB,CACrB7B,UAAW,kCACXI,WAAY,mCACZE,aAAc,wDACdE,kBAAmB,0DACnBE,YAAa,oCACbS,WAAY,sFAGhBW,IAASC,OACL,eAAC,IAAMC,WAAP,WACI,cAAC,EAAD,CAASjC,MAAO8B,IAChB,cAAC,EAAD,IACA,cAAC,EAAD,CAAcV,WAAYU,EAAUV,gBAExCc,SAASC,eAAe,SAM5Bd,M","file":"static/js/main.848e51e1.chunk.js","sourcesContent":["import React from 'react';\nimport { faGithub, faGoogle, faLinkedin, faStackOverflow, faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport '../styles/Sidebar.css';\n\ntype hrefLinks = {\n    gmailLink: string;\n    githubLink: string;\n    linkedinLink: string;\n    stackOverFlowLink: string;\n    twitterLink: string;\n};\n\ntype props = {\n    links: hrefLinks;\n};\n\nclass Sidebar extends React.Component<props> {\n    render(): JSX.Element {\n        return (\n            <div className=\"sidebar\">\n                <a href={this.props.links.gmailLink}>\n                    <FontAwesomeIcon size={'2x'} icon={faGoogle}></FontAwesomeIcon>\n                </a>\n                <a href={this.props.links.githubLink}>\n                    <FontAwesomeIcon size={'2x'} icon={faGithub}></FontAwesomeIcon>\n                </a>\n                <a href={this.props.links.linkedinLink}>\n                    <FontAwesomeIcon size={'2x'} icon={faLinkedin}></FontAwesomeIcon>\n                </a>\n                <a href={this.props.links.stackOverFlowLink}>\n                    <FontAwesomeIcon size={'2x'} icon={faStackOverflow}></FontAwesomeIcon>\n                </a>\n                <a href={this.props.links.twitterLink}>\n                    <FontAwesomeIcon size={'2x'} icon={faTwitter}></FontAwesomeIcon>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/personal-image.2662fa75.png\";","import React from 'react';\nimport avatar from '../static/personal-image.png';\n\nimport '../styles/ImageContainer.css';\n\nclass ImageContainer extends React.Component {\n    renderImage = (): JSX.Element => {\n        return (\n            <figure className=\"figure\">\n                <img className=\"avatar\" src={avatar}></img>\n            </figure>\n        );\n    };\n\n    render(): JSX.Element {\n        return (\n            <div>\n                <div>{this.renderImage()}</div>\n            </div>\n        );\n    }\n}\n\nexport default ImageContainer;\n","import React from 'react';\n\nimport '../styles/AboutSection.css';\n\ntype props = {\n    resumeLink: string;\n};\n\nclass AboutSection extends React.Component<props> {\n    render(): JSX.Element {\n        return (\n            <div className=\"sectionContainer\">\n                <div className=\"textContainer\">\n                    <p className=\"textStyle\">\n                        Hey, I'm Aryan Shridhar, a fourth year undergraduate from Vellore Institute of Technology,\n                        pursuing Computer Science and Engineering. I am an open source enthusiast and have a keen\n                        interest in developing user-end applications. This curiosity brought me closer to frameworks\n                        like React.js, React-Native, Electron.js, Django, Flask and other similar frameworks. Currently,\n                        I am working with <a href=\"https://github.com/electron\">Electron</a> as a GSoC'22 student\n                        enhancing <a href=\"https://github.com/electron/fiddle\">fiddle's</a> architecture from a security\n                        standpoint.\n                        <br />\n                        <br /> Click <a href={this.props.resumeLink}>here</a> to view my resume :)\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AboutSection;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sidebar from './components/Sidebar';\nimport ImageContainer from './components/ImageContainer';\nimport AboutSection from './components/AboutSection';\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\ntype links = {\n    gmailLink: string;\n    githubLink: string;\n    linkedinLink: string;\n    stackOverFlowLink: string;\n    twitterLink: string;\n    resumeLink: string;\n};\n\nconst hrefLinks: links = {\n    gmailLink: 'mailto:aryanshridhar7@gmail.com',\n    githubLink: 'https://github.com/aryanshridhar',\n    linkedinLink: 'https://www.linkedin.com/in/aryan-shridhar-b3a44b19a/',\n    stackOverFlowLink: 'https://stackoverflow.com/users/13148815/aryan-shridhar',\n    twitterLink: 'https://twitter.com/ShridharAryan',\n    resumeLink: 'https://drive.google.com/file/d/1ppUMjT5yrrhpxHwerA6KEH7eCuqKiQRT/view?usp=sharing',\n};\n\nReactDOM.render(\n    <React.StrictMode>\n        <Sidebar links={hrefLinks} />\n        <ImageContainer />\n        <AboutSection resumeLink={hrefLinks.resumeLink} />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}