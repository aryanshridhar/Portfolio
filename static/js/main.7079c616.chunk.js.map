{"version":3,"sources":["styles/Sidebar.tsx","Components/Sidebar.tsx","static/personal-image.png","styles/ImageContainer.tsx","Components/ImageContainer.tsx","styles/AboutSection.tsx","Components/AboutSection.tsx","reportWebVitals.ts","index.tsx"],"names":["sidebarStyle","height","position","zIndex","top","left","overflowX","sidebarContentStyle","display","flexDirection","justifyContent","Sidebar","style","styles","width","iconShape","icon","size","faGoogle","href","this","props","links","gmailLink","faGithub","githubLink","faLinkedin","linkedinLink","faStackOverflow","stackOverFlowLink","faTwitter","twitterLink","React","Component","avatarStyle","marginTop","borderRadius","verticalAlign","figureStyle","marginLeft","figureCaptionStyle","fontFamily","fontSize","paddingTop","textAlign","ImageContainer","renderCaption","isCaption","src","avatar","textContainerStyle","marginRight","sectionContainerStyle","textStyle","textAlignLast","AboutSection","resumeLink","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7079c616.chunk.js","sourcesContent":["import CSS from 'csstype';\n\nconst sidebarStyle: CSS.Properties = {\n    height: '100%',\n    position: 'fixed',\n    zIndex: 1,\n    top: 0,\n    left: 0,\n    overflowX: 'hidden',\n};\n\nconst sidebarContentStyle: CSS.Properties = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n};\n\nexport default { sidebarStyle, sidebarContentStyle };\n","import React from 'react';\nimport { ProSidebar, Menu, MenuItem, SidebarContent } from 'react-pro-sidebar';\nimport { faGithub, faGoogle, faLinkedin, faStackOverflow, faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from '../styles/Sidebar';\n\nimport 'react-pro-sidebar/dist/css/styles.css';\n\ntype hrefLinks = {\n    gmailLink: string;\n    githubLink: string;\n    linkedinLink: string;\n    stackOverFlowLink: string;\n    twitterLink: string;\n};\n\ntype props = {\n    links: hrefLinks;\n};\n\nclass Sidebar extends React.Component<props> {\n    render(): JSX.Element {\n        return (\n            <div>\n                <ProSidebar style={styles.sidebarStyle} width={75}>\n                    <SidebarContent style={styles.sidebarContentStyle}>\n                        <Menu iconShape=\"circle\">\n                            <MenuItem icon={<FontAwesomeIcon size={'2x'} icon={faGoogle}></FontAwesomeIcon>}>\n                                <a href={this.props.links.gmailLink}></a>\n                            </MenuItem>\n                        </Menu>\n                        <Menu iconShape=\"circle\">\n                            <MenuItem icon={<FontAwesomeIcon size={'2x'} icon={faGithub}></FontAwesomeIcon>}>\n                                <a href={this.props.links.githubLink}></a>\n                            </MenuItem>\n                        </Menu>\n                        <Menu iconShape=\"circle\">\n                            <MenuItem icon={<FontAwesomeIcon size={'2x'} icon={faLinkedin}></FontAwesomeIcon>}>\n                                <a href={this.props.links.linkedinLink}></a>\n                            </MenuItem>\n                        </Menu>\n                        <Menu iconShape=\"circle\">\n                            <MenuItem icon={<FontAwesomeIcon size={'2x'} icon={faStackOverflow}></FontAwesomeIcon>}>\n                                <a href={this.props.links.stackOverFlowLink}></a>\n                            </MenuItem>\n                        </Menu>\n                        <Menu iconShape=\"circle\">\n                            <MenuItem icon={<FontAwesomeIcon size={'2x'} icon={faTwitter}></FontAwesomeIcon>}>\n                                <a href={this.props.links.twitterLink}></a>\n                            </MenuItem>\n                        </Menu>\n                    </SidebarContent>\n                </ProSidebar>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/personal-image.49656594.png\";","import CSS from 'csstype';\n\nconst avatarStyle: CSS.Properties = {\n    height: '45vh',\n    marginTop: '15%',\n    borderRadius: '4px',\n    verticalAlign: 'top',\n};\n\nconst figureStyle: CSS.Properties = {\n    display: 'inline-block',\n    marginLeft: '15%',\n};\n\nconst figureCaptionStyle: CSS.Properties = {\n    fontFamily: 'Asul',\n    fontSize: '14px',\n    paddingTop: '10px',\n    textAlign: 'center',\n};\n\nexport default { avatarStyle, figureStyle, figureCaptionStyle };\n","import React from 'react';\n\nimport avatar from '../static/personal-image.png';\n\nimport styles from '../styles/ImageContainer';\n\ntype props = {\n    isCaption: boolean;\n};\n\nclass ImageContainer extends React.Component<props> {\n    renderCaption = (isCaption: boolean): JSX.Element => {\n        if (isCaption) {\n            return (\n                <figure style={styles.figureStyle}>\n                    <img src={avatar} style={styles.avatarStyle}></img>\n                    <figcaption style={styles.figureCaptionStyle}>\n                        Still hunting for a better frontal view face image!\n                    </figcaption>\n                </figure>\n            );\n        }\n        return <div></div>;\n    };\n\n    render(): JSX.Element {\n        return (\n            <div>\n                <div>{this.renderCaption(this.props.isCaption)}</div>\n            </div>\n        );\n    }\n}\n\nexport default ImageContainer;\n","import CSS from 'csstype';\n\nconst textContainerStyle: CSS.Properties = {\n    marginLeft: '25%',\n    marginRight: '10%',\n};\n\nconst sectionContainerStyle: CSS.Properties = {\n    display: 'flex',\n    marginTop: '20px',\n};\n\nconst textStyle: CSS.Properties = {\n    fontFamily: 'Asul',\n    textAlignLast: 'left',\n    fontSize: '18px',\n};\n\nexport default { textContainerStyle, sectionContainerStyle, textStyle };\n","import React from 'react';\n\nimport styles from '../styles/AboutSection';\n\ntype props = {\n    resumeLink: string;\n};\n\nclass AboutSection extends React.Component<props> {\n    render(): JSX.Element {\n        return (\n            <div style={styles.sectionContainerStyle}>\n                <div style={styles.textContainerStyle}>\n                    <p style={styles.textStyle}>\n                        Hey, Iâ€™m Aryan Shridhar, a second year undergraduate from Vellore Institute of Technology,\n                        pursuing Computer Science and Engineering. I am an open source enthusiast and have a keen\n                        interest in developing user-end applications. This curiosity brought me closer to frameworks\n                        like React.js, React-Native, Electron.js, Django, Flask and other similar frameworks including a\n                        few DL libraries like Pytorch, Keras and so. Apart from my computers, I love playing football\n                        and listening to music.\n                        <br />\n                        <br /> Click <a href={this.props.resumeLink}>here</a> to download my resume :)\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AboutSection;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sidebar from './Components/Sidebar';\nimport ImageContainer from './Components/ImageContainer';\nimport AboutSection from './Components/AboutSection';\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\ntype links = {\n    gmailLink: string;\n    githubLink: string;\n    linkedinLink: string;\n    stackOverFlowLink: string;\n    twitterLink: string;\n};\n\nconst hrefLinks: links = {\n    gmailLink: 'mailto:aryanshridhar7@gmail.com',\n    githubLink: 'https://github.com/aryanshridhar',\n    linkedinLink: 'https://www.linkedin.com/in/aryan-shridhar-b3a44b19a/',\n    stackOverFlowLink: 'https://stackoverflow.com/users/13148815/aryan-shridhar',\n    twitterLink: 'https://twitter.com/ShridharAryan',\n};\n\nReactDOM.render(\n    <React.StrictMode>\n        <Sidebar links={hrefLinks} />\n        <ImageContainer isCaption={true} />\n        <AboutSection resumeLink={'#'} />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}